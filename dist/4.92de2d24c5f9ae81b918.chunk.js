webpackJsonp([4],{1135:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t.d(n,"OthersModule",function(){return h});var o=t(4),l=t(1),i=t(12),a=t(1241),c=t(67),p=t(1160),r=t(1161),s=t(342),d=t(1162),u=t(1163),m=t(1164),f=t(1165),g=this&&this.__decorate||function(e,n,t,o){var l,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var c=e.length-1;c>=0;c--)(l=e[c])&&(a=(i<3?l(a):i>3?l(n,t,a):l(n,t))||a);return i>3&&a&&Object.defineProperty(n,t,a),a},h=function(){function OthersModule(){}return OthersModule=g([Object(l.M)({declarations:[p.a,r.a,d.a,u.a,m.a,f.a],imports:[o.b,i.b,a.a,c.b,s.a],exports:[p.a],providers:[]})],OthersModule)}()},1160:function(e,n,t){"use strict";t.d(n,"a",function(){return i});var o=t(1),l=this&&this.__decorate||function(e,n,t,o){var l,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var c=e.length-1;c>=0;c--)(l=e[c])&&(a=(i<3?l(a):i>3?l(n,t,a):l(n,t))||a);return i>3&&a&&Object.defineProperty(n,t,a),a},i=function(){function ExUserMainComponent(){}return ExUserMainComponent=l([Object(o.o)({selector:"ex-user-main",template:t(1242)})],ExUserMainComponent)}()},1161:function(e,n,t){"use strict";t.d(n,"a",function(){return a});var o=t(1),l=t(1243),i=this&&this.__decorate||function(e,n,t,o){var l,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var c=e.length-1;c>=0;c--)(l=e[c])&&(a=(i<3?l(a):i>3?l(n,t,a):l(n,t))||a);return i>3&&a&&Object.defineProperty(n,t,a),a},a=function(){function ExTooltipComponent(){this.code=l.a,this.page={previous:{name:"Steps 步骤条",link:"/nav/steps"},next:{name:"Card 卡片",link:"/others/card"}}}return ExTooltipComponent=i([Object(o.o)({selector:"ex-tooltip",template:t(1244),styles:[t(1245)],encapsulation:o._19.None})],ExTooltipComponent)}()},1162:function(e,n,t){"use strict";t.d(n,"a",function(){return a});var o=t(1),l=t(1246),i=this&&this.__decorate||function(e,n,t,o){var l,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var c=e.length-1;c>=0;c--)(l=e[c])&&(a=(i<3?l(a):i>3?l(n,t,a):l(n,t))||a);return i>3&&a&&Object.defineProperty(n,t,a),a},a=function(){function ExCardComponent(){this.code=l.a,this.exClass=function(){function class_1(){}return class_1.prototype.currentDate=function(){return new Date},class_1}(),this.page={previous:{name:"Tooltip 文字提示",link:"/others/tooltip"},next:{name:"Dialog 对话框",link:"/others/dialog"}}}return ExCardComponent=i([Object(o.o)({selector:"ex-card",template:t(1247),styles:[t(1248)],encapsulation:o._19.None})],ExCardComponent)}()},1163:function(e,n,t){"use strict";t.d(n,"a",function(){return a});var o=t(1),l=t(1249),i=this&&this.__decorate||function(e,n,t,o){var l,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var c=e.length-1;c>=0;c--)(l=e[c])&&(a=(i<3?l(a):i>3?l(n,t,a):l(n,t))||a);return i>3&&a&&Object.defineProperty(n,t,a),a},a=function(){function ExDialogComponent(){this.code=l.a,this.exClass=function(){function class_1(){}return class_1.prototype.handle=function(e){alert("一段同步或异步的任务"),e()},class_1}(),this.page={previous:{name:"Card 卡片",link:"/others/card"},next:{name:"Carousel 走马灯",link:"/others/carousel"}}}return ExDialogComponent=i([Object(o.o)({selector:"ex-dialog",template:t(1250),encapsulation:o._19.None})],ExDialogComponent)}()},1164:function(e,n,t){"use strict";t.d(n,"a",function(){return a});var o=t(1),l=t(1251),i=this&&this.__decorate||function(e,n,t,o){var l,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var c=e.length-1;c>=0;c--)(l=e[c])&&(a=(i<3?l(a):i>3?l(n,t,a):l(n,t))||a);return i>3&&a&&Object.defineProperty(n,t,a),a},a=function(){function ExCarouselComponent(){this.code=l.a,this.exClass=function(){function class_1(){}return class_1}(),this.page={previous:{name:"Dialog 对话框",link:"/others/dialog"},next:{name:"Collapse 折叠面板",link:"/others/collapse"}}}return ExCarouselComponent=i([Object(o.o)({selector:"ex-carousel",template:t(1252),styles:[t(1253)],encapsulation:o._19.None})],ExCarouselComponent)}()},1165:function(e,n,t){"use strict";t.d(n,"a",function(){return a});var o=t(1),l=t(1254),i=this&&this.__decorate||function(e,n,t,o){var l,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var c=e.length-1;c>=0;c--)(l=e[c])&&(a=(i<3?l(a):i>3?l(n,t,a):l(n,t))||a);return i>3&&a&&Object.defineProperty(n,t,a),a},a=function(){function ExCollapseComponent(){this.code=l.a,this.page={previous:{name:"Carousel 走马灯",link:"/others/carousel"},next:{name:null,link:null}}}return ExCollapseComponent=i([Object(o.o)({selector:"ex-collapse",template:t(1255),styles:[t(1256)],encapsulation:o._19.None})],ExCollapseComponent)}()},1241:function(e,n,t){"use strict";t.d(n,"a",function(){return m});var o=t(1),l=t(27),i=t(1160),a=t(1161),c=t(1162),p=t(1163),r=t(1164),s=t(1165),d=this&&this.__decorate||function(e,n,t,o){var l,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var c=e.length-1;c>=0;c--)(l=e[c])&&(a=(i<3?l(a):i>3?l(n,t,a):l(n,t))||a);return i>3&&a&&Object.defineProperty(n,t,a),a},u=[{path:"",component:i.a,children:[{path:"tooltip",component:a.a},{path:"card",component:c.a},{path:"dialog",component:p.a},{path:"carousel",component:r.a},{path:"collapse",component:s.a}]}],m=function(){function OthersRoutingModule(){}return OthersRoutingModule=d([Object(o.M)({imports:[l.e.forChild(u)],exports:[l.e]})],OthersRoutingModule)}()},1242:function(e,n){e.exports="<router-outlet></router-outlet>\n"},1243:function(e,n,t){"use strict";n.a=['\n<div class="box">\n  <div class="top">\n    <el-tooltip placement="top-start">\n      <el-button>上左</el-button>\n      <ng-template #tip><span>placement is top-start</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="top">\n      <el-button>上边</el-button>\n      <ng-template #tip> <span>placement is top</span> </ng-template>\n    </el-tooltip>\n    <el-tooltip placement="top-end">\n      <el-button>上右</el-button>\n      <ng-template #tip><span>placement is top-end</span></ng-template>\n    </el-tooltip>\n  </div>\n\n  <div class="left">\n    <el-tooltip placement="left-start">\n      <el-button>左上</el-button>\n      <ng-template #tip><span>placement is left-start</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="left">\n      <el-button>左边</el-button>\n      <ng-template #tip><span>placement is left</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="left-end">\n      <el-button>左下</el-button>\n      <ng-template #tip><span>placement is left-end</span></ng-template>\n    </el-tooltip>\n  </div>\n\n  <div class="right">\n    <el-tooltip placement="right-start">\n      <el-button>右上</el-button>\n      <ng-template #tip><span>placement is right-start</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="right">\n      <el-button>右边</el-button>\n      <ng-template #tip><span>placement is right</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="right-end">\n      <el-button>右下</el-button>\n      <ng-template #tip><span>placement is right-end</span></ng-template>\n    </el-tooltip>\n  </div>\n\n  <div class="bottom">\n    <el-tooltip placement="bottom-start">\n      <el-button>下左</el-button>\n      <ng-template #tip><span>placement is bottom-start</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="bottom">\n      <el-button>下边</el-button>\n      <ng-template #tip><span>placement is bottom</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="bottom-end">\n      <el-button>下右</el-button>\n      <ng-template #tip> <span>placement is bottom-end</span> </ng-template>\n    </el-tooltip>\n  </div>\n</div>\n','\n<el-tooltip placement="top">\n  <el-button>Dark</el-button>\n  <ng-template #tip>\n    <span>Top center</span>\n  </ng-template>\n</el-tooltip>\n\n<el-tooltip placement="bottom" effect="light">\n  <el-button>Light</el-button>\n  <ng-template #tip>\n    <span>Bottom center</span>\n  </ng-template>\n</el-tooltip>\n','\n<el-tooltip placement="bottom" [elDisabled]="true">\n  <el-button>elDisabled</el-button>\n  <ng-template #tip>\n    <span>Top center</span>\n  </ng-template>\n</el-tooltip>\n']},1244:function(e,n){e.exports='<h2 i18n="@@tooltip-h2-1">Tooltip 文字提示</h2>\n<p i18n="@@tooltip-p-1">常用于展示鼠标 hover 时的提示信息。</p>\n<p i18n="@@tooltip-p-2">与其他组件一样，此组件未依赖任何第三方组件，这是与 <code>element-vue</code> 的不同之处。</p>\n\n<h3 i18n="@@tooltip-h3-1">基础用法</h3>\n<p i18n="@@tooltip-p-3">在这里我们提供 9 种不同方向的展示方式，可以通过以下完整示例来理解，选择你要的效果。</p>\n<ex-demo  [code]="code[0]" notes="使用 <code>ng-template</code> 的 <code>#tip</code>\n属性来决定 hover 时的提示信息或模板。由 <code>placement</code> 属性决定展示效果，提示框体展示的位置与朝向。具体请参阅组件接口文档。">\n</ex-demo>\n\n<h3 i18n="@@tooltip-h3-2">主题</h3>\n<p i18n="@@tooltip-p-4">Tooltip 组件提供了两个不同的主题：<code>dark</code> 和 <code>light</code>。</p>\n<ex-demo  [code]="code[1]" notes="通过设置 <code>effect</code> 属性来改变主题，默认为 <code>dark</code>">\n</ex-demo>\n\n<h3 i18n="@@tooltip-h3-3">禁用</h3>\n<p i18n="@@tooltip-p-5">设置提示禁用</p>\n<ex-demo  [code]="code[2]" notes="设置禁用后不会影响内容本身的响应，但不再弹出提示。">\n</ex-demo>\n\n\n<ex-document doc="tooltip"></ex-document>\n\n<ex-footer-nav [page]="page"></ex-footer-nav>\n'},1245:function(e,n){e.exports=".box {\n  width: 400px;\n  padding-left: 100px; }\n\n.top {\n  text-align: center; }\n\n.left {\n  float: left;\n  width: 60px; }\n\n.right {\n  float: right;\n  width: 60px; }\n\n.bottom {\n  clear: both;\n  text-align: center; }\n\n.item {\n  margin: 4px; }\n\n.left .el-tooltip__popper,\n.right .el-tooltip__popper {\n  padding: 8px 10px; }\n"},1246:function(e,n,t){"use strict";n.a=['\n<el-card class="box-card">\n  <ng-template #header>\n    <div class="clearfix">\n      <span style="line-height: 36px;">卡片名称</span>\n      <el-button style="float: right;" type="primary">操作按钮</el-button>\n    </div>\n  </ng-template>\n  <div *ngFor="let item of [0, 1, 2, 4]" class="text item">\n    {{\'列表内容 \' + item }}\n  </div>\n</el-card>\n','\n<el-card class="box-card">\n  <div *ngFor="let item of [0, 1, 2, 4]" class="text item">\n    {{\'列表内容 \' + item }}\n  </div>\n</el-card>\n\n','\n<div el-row>\n  <div el-col span="8" *ngFor="let item of [0, 1]" [offset]="item > 0 ? 2 : 0">\n    <el-card body-style="padding: 0px">\n      <img src="http://element.eleme.io/1.4/static/hamburger.50e4091.png" class="image">\n      <div style="padding: 14px;">\n        <span>好吃的汉堡</span>\n        <div class="bottom clearfix">\n          <time class="time">{{ currentDate() | date: \'dd/MM/yyyy\' }}</time>\n          <el-button type="text" class="button">操作按钮</el-button>\n        </div>\n      </div>\n    </el-card>\n  </div>\n</div>\n']},1247:function(e,n){e.exports='<h2 i18n="@@card-h2-1">Card 卡片</h2>\n<p i18n="@@card-p-1">将信息聚合在卡片容器中展示。</p>\n\n<h3 i18n="@@card-h3-1">基础用法</h3>\n<p i18n="@@card-p-2">包含标题，内容和操作。</p>\n<ex-demo  [code]="code[0]">\n</ex-demo>\n\n<h3 i18n="@@card-h3-2">简单卡片</h3>\n<p i18n="@@card-p-3">卡片可以只有内容区域。</p>\n<ex-demo  [code]="code[1]">\n</ex-demo>\n\n<h3 i18n="@@card-h3-3">带图片</h3>\n<p i18n="@@card-p-4">可配置定义更丰富的内容展示。</p>\n<ex-demo  [code]="code[2]" [class]="exClass" notes="配置 <code>body-style</code>\n属性来自定义 <code>body</code> 部分的样式，我们还使用了布局组件。">\n</ex-demo>\n\n\n\n<ex-document doc="card"></ex-document>\n\n<ex-footer-nav [page]="page"></ex-footer-nav>\n'},1248:function(e,n){e.exports='.text {\n  font-size: 14px; }\n\n.item {\n  padding: 18px 0; }\n\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: ""; }\n\n.clearfix:after {\n  clear: both; }\n\n.box-card {\n  width: 480px; }\n\n.time {\n  font-size: 13px;\n  color: #999; }\n\n.bottom {\n  margin-top: 13px;\n  line-height: 12px; }\n\n.button {\n  padding: 0;\n  float: right; }\n\n.image {\n  width: 100%;\n  display: block; }\n'},1249:function(e,n,t){"use strict";n.a=['\n<div class="box-card" #card>\n  <p el-row>点击按钮显示提示</p>\n  <el-button (click)="card.toggle = true">扬州</el-button>\n  <el-dialog [title]="\'扬州\'" [(visible)]="card.toggle">\n    <span>一个平均寿命很高的城市。</span>\n  </el-dialog>\n  \n  <el-button (click)="card.toggle2 = true">夏威夷</el-button>\n  <el-dialog [title]="\'夏威夷\'" [(visible)]="card.toggle2">\n    <span>我选择在夏威夷演讲。</span>\n  </el-dialog>\n</div>\n','\n<div class="box-card" #card>\n\n  <el-button (click)="card.toggle = true">自定义标题</el-button>\n  <el-dialog [title]="\'扬州\'" [(visible)]="card.toggle">\n    <ng-template #title>\n      <span class="el-icon-warning"></span>\n      <span>自定义的标题</span>\n    </ng-template>\n    <span>一个平均寿命很高的城市。</span>\n  </el-dialog>\n  \n  <el-button (click)="card.toggle2 = true">自定义尾部</el-button>\n  <el-dialog [(visible)]="card.toggle2">\n    <ng-template #title>\n      <span>朗诵</span>\n    </ng-template>\n    <span>这篇葛底斯堡演讲朗诵的很好。</span>\n    <ng-template #footer>\n      <el-button (click)="card.toggle2 = false">是的</el-button>\n    </ng-template>\n  </el-dialog>\n</div>\n\n','\n<div class="box-card" #card>\n  <el-button (click)="card.toggle = true">回调函数</el-button>\n  \n  <el-dialog [title]="\'扬州\'" [(visible)]="card.toggle"\n    [before-close]="handle">\n    <span>一个平均寿命很高的城市。</span>\n  </el-dialog>\n  \n</div>\n\n<script type="text">\n// in Component:\nhandle(done: Function): void {\n  alert(\'一段同步或异步的任务\')\n  done()\n}\n<\/script>\n','\n<div class="box-card" #card>\n  <el-button (click)="card.toggle = true">居中显示</el-button>\n  \n  <el-dialog [title]="\'一位扬州的长者\'" [(visible)]="card.toggle"\n    [center]="true">\n    <span>他为我们朗诵了葛底斯堡演讲。</span>\n  </el-dialog>\n  \n</div>\n']},1250:function(e,n){e.exports='<h2 i18n="@@dialog-h2-1">Dialog 对话框</h2>\n<p i18n="@@dialog-p-1">在保留当前页面状态的情况下，告知用户并承载相关操作。</p>\n\n<h3 i18n="@@dialog-h3-1">基本用法</h3>\n<p i18n="@@dialog-p-2">Dialog 弹出一个对话框，适合需要定制性更大的场景。</p>\n<ex-demo  [code]="code[0]" notes="<code>visible</code> 接受一个布尔变量，用于控制对话框的打开与关闭。">\n</ex-demo>\n\n<h3 i18n="@@dialog-h3-2">自定义内容</h3>\n<p i18n="@@dialog-p-3">Dialog 组件的内容可以是任意的，甚至可以是表格或表单。</p>\n<ex-demo  [code]="code[1]" notes="你可以通过<code>ng-template</code>\n插入 html 片段甚至是组件来构建自定义的对话框。">\n</ex-demo>\n\n<h3 i18n="@@dialog-h3-3">回调函数</h3>\n<p i18n="@@dialog-p-4">回调函数能够帮助你更细腻的定义何时关闭对话框。</p>\n<ex-demo  [code]="code[2]" [class]="exClass" notes="你可以通过<code>ng-template</code>\n插入 html 片段甚至是组件来构建自定义的对话框。">\n</ex-demo>\n\n<h3 i18n="@@dialog-h3-4">居中显示</h3>\n<p i18n="@@dialog-p-5">居中属性不会影响内容。</p>\n<ex-demo  [code]="code[3]" [class]="exClass">\n</ex-demo>\n\n\n\n<ex-document doc="dialog"></ex-document>\n\n<ex-footer-nav [page]="page"></ex-footer-nav>\n'},1251:function(e,n,t){"use strict";n.a=["\n\x3c!-- 你可以通过 [(model)] 来指定一个初始值 --\x3e\n\x3c!-- 同时获得所有值变更的推送 --\x3e\n<el-carousel height=\"150px\">\n  <el-carousel-item *ngFor=\"let item of ['第一个', '第二个', '第三个']\">\n    <div class=\"small\">\n      <h3>{{item}}</h3>\n    </div>\n  </el-carousel-item>\n</el-carousel>\n\n","\n<el-carousel height=\"300px\" indicator-position=\"outside\">\n  <el-carousel-item *ngFor=\"let item of ['第一个', '第二个', '第三个']\">\n    <h3>{{item}}</h3>\n  </el-carousel-item>\n</el-carousel>\n",'\n<el-carousel height="150px" arrow="always">\n  <el-carousel-item *ngFor="let item of [\'第一个\', \'第二个\', \'第三个\']">\n    <div class="small">\n      <h3>{{item}}</h3>\n    </div>\n  </el-carousel-item>\n</el-carousel>\n',"\n<el-carousel height=\"150px\">\n  <el-carousel-item *ngFor=\"let item of ['第一个', '第二个', '第三个']; let i = index\"\n    [label]=\"'label' + i\">\n    <div class=\"small\">\n      <h3>{{item}}</h3>\n    </div>\n  </el-carousel-item>\n</el-carousel>\n"]},1252:function(e,n){e.exports='\n<h2 i18n="@@carousel-h2-1">Carousel 走马灯</h2>\n<p i18n="@@carousel-p-1">在有限空间内，循环播放同一类型的图片、文字等内容</p>\n\n<h3 i18n="@@carousel-h3-1">基础用法</h3>\n<p i18n="@@carousel-p-2">适用广泛的基础用法</p>\n<ex-demo  [code]="code[0]" notes="默认情况下，鼠标 click 底部的指示器时就会触发切换。\n通过设置 <code>trigger</code> 属性为 <code>hover</code>，可以达到 hover 触发的效果">\n</ex-demo>\n\n<h3 i18n="@@carousel-h3-2">指示器</h3>\n<p i18n="@@carousel-p-3">可以将指示器的显示位置设置在容器外部</p>\n<ex-demo  [code]="code[1]">\n</ex-demo>\n\n<h3 i18n="@@carousel-h3-3">切换箭头</h3>\n<p i18n="@@carousel-p-4">可以设置切换箭头的总是显示</p>\n<ex-demo  [code]="code[2]" notes="箭头或指示器的触发方式可以更改，详见文末属性参考。">\n</ex-demo>\n\n<h3 i18n="@@carousel-h3-4">标签</h3>\n<p i18n="@@carousel-p-5">为指示器增加额外文本</p>\n<ex-demo  [code]="code[3]" notes="为了保证样式，存在任何一个 <code>label</code> 属性\n为空或未设置，指示器都会隐藏所有标签。">\n</ex-demo>\n\n\n\n<ex-document doc="carousel"></ex-document>\n<ex-document doc="carousel-item"></ex-document>\n\n<ex-footer-nav [page]="page"></ex-footer-nav>\n'},1253:function(e,n){e.exports=".demonstration {\n  display: block;\n  color: #8492a6;\n  font-size: 14px;\n  margin-bottom: 20px; }\n\n.el-carousel__container {\n  text-align: center; }\n\n.el-carousel__item h3 {\n  color: #fff;\n  font-size: 18px;\n  line-height: 300px;\n  margin: 0 !important; }\n\n.el-carousel__item:nth-child(odd) {\n  background-color: #99a9bf; }\n\n.el-carousel__item:nth-child(even) {\n  background-color: #d3dce6; }\n\n.small h3 {\n  font-size: 14px;\n  line-height: 150px; }\n\n.medium h3 {\n  font-size: 14px;\n  line-height: 200px; }\n"},1254:function(e,n,t){"use strict";n.a=['\n\x3c!-- 可以指定 [(model)] 或 (modelChange) 来获取每次改变的值--\x3e\n<el-collapse [model]="[\'1\']">\n  <el-collapse-item label="一致性 Consistency" value="1">\n    <div>与现实生活一致：与现实生活的流程、逻辑保持一致，遵循用户习惯的语言和概念；</div>\n    <div>在界面中一致：所有的元素和结构需保持一致，比如：设计样式、图标和文本、元素的位置等。</div>\n  </el-collapse-item>\n  <el-collapse-item label="反馈 Feedback" value="2">\n    <div>控制反馈：通过界面样式和交互动效让用户可以清晰的感知自己的操作；</div>\n    <div>页面反馈：操作后，通过页面元素的变化清晰地展现当前状态。</div>\n  </el-collapse-item>\n  <el-collapse-item label="效率 Efficiency" value="3">\n    <div>简化流程：设计简洁直观的操作流程；</div>\n    <div>清晰明确：语言表达清晰且表意明确，让用户快速理解进而作出决策；</div>\n    <div>帮助用户识别：界面简单直白，让用户快速识别而非回忆，减少用户记忆负担。</div>\n  </el-collapse-item>\n  <el-collapse-item label="可控 Controllability" value="4">\n    <div>用户决策：根据场景可给予用户操作建议或安全提示，但不能代替用户进行决策；</div>\n    <div>结果可控：用户可以自由的进行操作，包括撤销、回退和终止当前操作等。</div>\n  </el-collapse-item>\n</el-collapse>\n\n','\n<el-collapse [accordion]="true">\n  <el-collapse-item label="一致性 Consistency" value="1">\n    <div>与现实生活一致：与现实生活的流程、逻辑保持一致，遵循用户习惯的语言和概念；</div>\n    <div>在界面中一致：所有的元素和结构需保持一致，比如：设计样式、图标和文本、元素的位置等。</div>\n  </el-collapse-item>\n  <el-collapse-item label="反馈 Feedback" value="2">\n    <div>控制反馈：通过界面样式和交互动效让用户可以清晰的感知自己的操作；</div>\n    <div>页面反馈：操作后，通过页面元素的变化清晰地展现当前状态。</div>\n  </el-collapse-item>\n  <el-collapse-item label="效率 Efficiency" value="3">\n    <div>简化流程：设计简洁直观的操作流程；</div>\n    <div>清晰明确：语言表达清晰且表意明确，让用户快速理解进而作出决策；</div>\n    <div>帮助用户识别：界面简单直白，让用户快速识别而非回忆，减少用户记忆负担。</div>\n  </el-collapse-item>\n  <el-collapse-item label="可控 Controllability" value="4">\n    <div>用户决策：根据场景可给予用户操作建议或安全提示，但不能代替用户进行决策；</div>\n    <div>结果可控：用户可以自由的进行操作，包括撤销、回退和终止当前操作等。</div>\n  </el-collapse-item>\n</el-collapse>\n','\n<el-collapse>\n  <el-collapse-item label="一致性 Consistency" value="1">\n  \n    <ng-template #label>\n      一致性 Consistency<i class="header-icon el-icon-information"></i>\n    </ng-template>\n    \n    <div>与现实生活一致：与现实生活的流程、逻辑保持一致，遵循用户习惯的语言和概念；</div>\n    <div>在界面中一致：所有的元素和结构需保持一致，比如：设计样式、图标和文本、元素的位置等。</div>\n  </el-collapse-item>\n  <el-collapse-item label="反馈 Feedback" value="2">\n    <div>控制反馈：通过界面样式和交互动效让用户可以清晰的感知自己的操作；</div>\n    <div>页面反馈：操作后，通过页面元素的变化清晰地展现当前状态。</div>\n  </el-collapse-item>\n  <el-collapse-item label="效率 Efficiency" value="3">\n    <div>简化流程：设计简洁直观的操作流程；</div>\n    <div>清晰明确：语言表达清晰且表意明确，让用户快速理解进而作出决策；</div>\n    <div>帮助用户识别：界面简单直白，让用户快速识别而非回忆，减少用户记忆负担。</div>\n  </el-collapse-item>\n  <el-collapse-item label="可控 Controllability" value="4">\n    <div>用户决策：根据场景可给予用户操作建议或安全提示，但不能代替用户进行决策；</div>\n    <div>结果可控：用户可以自由的进行操作，包括撤销、回退和终止当前操作等。</div>\n  </el-collapse-item>\n</el-collapse>\n']},1255:function(e,n){e.exports='<h2 i18n="@@collapse-h2-1">Collapse 折叠面板</h2>\n<p i18n="@@collapse-p-1">通过折叠面板收纳内容区域</p>\n\n<h3 i18n="@@collapse-h3-1">基础用法</h3>\n<p i18n="@@collapse-p-2">可同时展开多个面板，面板之间不影响</p>\n<ex-demo  [code]="code[0]" notes="<code>[model]</code> 接受一个初始化的数组，\n数组中的每一项与 <code>el-collapse-item</code> 的属性 <code>[value]</code> 相对应。">\n</ex-demo>\n\n<h3 i18n="@@collapse-h3-2">手风琴效果</h3>\n<p i18n="@@collapse-p-3">每次只能展开一个面板</p>\n<ex-demo  [code]="code[1]">\n</ex-demo>\n\n<h3 i18n="@@collapse-h3-3">自定义面板标题</h3>\n<p i18n="@@collapse-p-4">除了可以通过 <code>label</code> 属性以外，\n  还可以通过 <code>ng-template</code> 来实现自定义面板的标签内容，以实现增加图标等效果。</p>\n<ex-demo  [code]="code[2]">\n</ex-demo>\n\n\n\n<ex-document doc="collapse"></ex-document>\n<ex-document doc="collapse-item"></ex-document>\n\n<ex-footer-nav [page]="page"></ex-footer-nav>\n'},1256:function(e,n){e.exports=".el-icon-information {\n  padding-left: 10px; }\n"}});